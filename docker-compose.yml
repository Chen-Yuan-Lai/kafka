version: "3.7"
services:
  zoo1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    volumes:
      - "zoo1_data:/data"
      - "zoo1_datalog:/datalog"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-net
    healthcheck:
      test:
        [
          "CMD",
          "echo",
          "ruok",
          "|",
          "nc",
          "localhost",
          "2181",
          "|",
          "grep",
          "imok",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  kafka1:
    build: ./kafka
    hostname: kafka1
    container_name: kafka1
    depends_on:
      zoo1:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - "kafka1_data:/var/lib/kafka/data"
    healthcheck:
      test: ["CMD", "/usr/local/bin/kafka-healthcheck.sh"]
      interval: 5s
      timeout: 30s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.9" # Limit to 50% of a CPU
          memory: 1638M # Limit to 256MB of memory
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: true
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_MS: 20000
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      kafka_log_retention_check.INTERVAL.MS: 100000

    networks:
      - kafka-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  kafka-ui:
    image: provectuslabs/kafka-ui:latest # or use a specific version
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:19092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zoo1:2181"
    networks:
      - kafka-net
    depends_on:
      - kafka1

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
networks:
  kafka-net:
    driver: bridge
volumes:
  zoo1_data:
  zoo1_datalog:
  kafka1_data:
